@use 'sass:map';
@use './variables.scss' as *;

@mixin basis {
  font-size: get-css-var('font-size-base');
  line-height: get-css-var('line-height-base');
  color: get-css-var('content-color-base');
  vertical-align: middle;

  &,
  *,
  *::before,
  *::after {
    box-sizing: border-box;
  }
}

@mixin fixed {
  position: fixed;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
}

@mixin inner-fixed {
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
}

@mixin clear-both {
  &::before,
  &::after {
    display: table;
    content: '';
  }
}

@mixin query-media($point) {
  @if map.has-key($break-point-map, $point) {
    @media screen and #{inspect(map.get($break-point-map, $point))} {
      @content;
    }
  } @else {
    @content;
  }
}

@mixin around-border($border-color, $border-radius, $duration: 2000ms) {
  position: relative;

  &::before {
    position: absolute;
    top: -4px;
    left: -4px;
    width: calc(100% + 8px);
    height: calc(100% + 8px);
    pointer-events: none;
    content: '';
    border: get-css-var('border-shape') $border-color;
    border-radius: $border-radius;
    transition: get-css-var('transition-border'), get-css-var('transition-opacity');
    animation: vxp-border-clip $duration infinite linear;
  }
}

@keyframes vxp-border-clip {
  0%,
  100% {
    clip-path: inset(0 0 calc(100% - 1px) 0);
  }

  25% {
    clip-path: inset(0 0 0 calc(100% - 1px));
  }

  50% {
    clip-path: inset(calc(100% - 1px) 0 0 0);
  }

  75% {
    clip-path: inset(0 calc(100% - 1px) 0 0);
  }
}
